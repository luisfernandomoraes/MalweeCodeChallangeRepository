@model MalweeCodeChallenge.Core.Entities.ServiceProvided

@{
    ViewBag.Title = "Create";
}

<h2>Registar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
 
    <div class="form-horizontal col-md-12">
        <h4>Serviço Prestado</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group col-md-10">
            @Html.Label("Tipo de Serviço", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EnumDropDownListFor(model => model.Service, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownList("ServicesEnum", ViewBag.ServicesEnum as SelectList, htmlAttributes: new { @class = "form-control", id="SelectServiceSel2" })
                @Html.ValidationMessageFor(model => model.Service, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10">
            @Html.Label("Data do Serviço", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfService, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfService, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group col-md-10">
            @Html.Label("Valor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10">
            @Html.Label("Descrição", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control control text-area"} })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group col-md-10 tpbutton btn-toolbar text-center">
            <br />
            <br />
            <div class="col-md-2"></div>
            <a href="Index" class="col-md-2 btn btn-default">Voltar</a>
            <input type="button" id="btnSave" href="#" class="col-md-2 btn btn-primary " value="Salvar"/>
        </div>

        <div class="form-group col-md-10 tpbutton btn-toolbar text-center">

        </div>

    </div>
}


<!--scripts---->
@section Scripts {
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Scripts/jquery.maskMoney.min.js"></script>
    <script src="~/Scripts/app/serviceProvided/create/create.js"></script>

}
